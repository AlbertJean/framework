--------------------
Issues
--------------------

--------------------
Todo
--------------------
i
+ Continue view:
	+ Remove continue view
	+ Add continue overlay picture play button

+ Add game save clear (on game over)

+ Bandit beams:
	+ Create specialized beam hit test: only hittest player
	+ Warmup time
	+ Create laser sound
	+ Add laser sound playback (must be shared between lasers, because of resource depletion elsewise)
	
+ GRS PHP: Create server exception function (creates XML with error code/text)
	+ Create function, die at end
	+ Replace die() statements

+ GRS PHP: Create server exception function (creates XML with error code/text)
	+ Create function, die at end
	+ Replace die() statements

+ Text descriptions for 1-10th place global rank

+ Enemy explosions: use similar effect as touch particles (except moving violently outwards)

+ Add keyboard / text input to score submit view

+ Add 'particle' effects to menu buttons
	+ Add particle effect for interface effects (transform must match UI)
	# Add particle effects to views that have nothing but UI
		# Add special touch listener to do just this. enable/disable on focus/lost

- Add device rotation + OpenGL identity matrix reset

+ Maintain collision ID <-> position table, Position_set updates table
	+ Allows for missile targeting

+ Add index on scores.score table field
+ Score view: enable/remove touch handling
	+ OnFocus, OnFocusLost ?
	# Or add IsFocussed flag to menu..
+ On score submit: scroll score into view (focus on score ranking)

+ High scores
	# return total -> let client detect end of list (result count < request count)
	+ on submit: rank and old personal best
+ High scores: allow local saves? could be tampered with.. Encrypt messages & save before send?
+ High scores: decide on acceptable characters in names
+ Fix bullet pivot
	+ fix offset
	+ and offset shooting distance

+ Create music/sound on/off graphics
+ Create main menu buttons
+ Create high score grapics
	+ high score menu design
	+ catagory buttons (arcade, time attack)
	+ difficulty buttons (easy, medium, hard)
	+ back button
	+ refresh button
	
+ Add -w option to font compiler
	+ shrink texture atlas after it has been generated
	+ add -w option to build script

+ Add score effect stuff
	+ Fix scores or use text string drawing..

# Add include support to resource index, etc
+ Fix shadow alpha on vector shapes with non-opaque fill
+ Fix laser beam sweap rotation
+ Fix laser sweep minimal angle

+ Add paddo effect indicator

+ check out llvm-g++

# Add rotation speed to enemy behaviour struct

+ Prototype boss

+ Fix small fry detection

+ Optimize / better integrate new SelectionSBuffer/original buffer

+ Develop 'leveling' plan. We have powerups, enemies, spawn patterns, bosses, etc
	how does advancing through levels affect these things?

+ Add mini boss powerup drops
+ Add boss announcement screen (stats, overlay, picture (?))
+ Add boss stuff (?)

+ Create highscore entry screen
+ Create credits/upgrade screen
# Create application loading sequence

+ Determine settings in options screen
	+ Music on/off + volume
	+ (All) sound on/off + volume
	# Difficulty setting
	+ (Back button)

+ Add player spawn sequence
+ Add player invincibility during respawn
+ Add player death sequence
+ Add gameover sequence
+ Add player lives mgt
+ Render player lives
+ Add energy/shield glow during powerup
+ Remove temporal powerups on death
+ Reduce weapon levels on death

+ Use spans/segments for SelectionBuffer. gone are the days of pixel simpliciteh! Say hello to friendly bandwidth.

+ Let EntityPlayer check collisions. Non friendly? damage / death
+ Use floats for hitpoints/damage.. Required for damage over time (laser beams)
+ Research encryption algo/lib for high score system
# Send extra info with high scores, eg settings, etc
	-> improvement program info
+ Add level border push thingy
	+ prevent ship from exiting level
	+ prevent ship from disappearing underneath controls / hud
+ Add enemy ship indicators
	+ Adds orientation and fear at the start of a new wave + progress estimate
	+ Larger indicator for bosses
	# Perhaps even specialized graphics
+ No fire -> more energy -> faster shield restoration
+ Add no-shadow option for vector graphics
+ Increase analog controller radii
	+ Make pixel distance default reading, not the normalized reading
+ Separate targeting angle from movement angle
	+ Interpolation is nice, but makes movement difficult
	+ Still required for non jittery rotation of ship/aim
+ Reduce dead zone (radius 3?)
# Make EntitySun a regular dynamics
# Make EntityBlackhole regular dynamics
+ Touch priority stuff
	Traverse listener list, select first which responds
	Rewrite world stuff
+ Increase # bullets (x2)
+ Add wave/level intermezzo's
# Add raindrops effect (polish)
+ Add background animation helper classes (polish)
+ Link EntityPlayer energy/shield to GUI
+ Add intermezzo stuff
+ Experiment with explosion stuff
	Add explosions
		Search key frames?
		Dig up old explosion generator?
		Stock art?
	Add explosion ripple effect
		Either to background or using overlay (ala geo defense)
# Think about a hybrid control scheme..
+ Implement high score tables
	+ Implement GUI stuff
	+ Implement back end
	+ Implement website
+ Fix boss movement patters (currently centered around sun..)
+ Camera -> use follow cam with slight tolerance value and #smooth scrolling
# Fix black hole collision detection
	# Do not render collision shape
	# Perform collision query (circle or rect)

--------------------
Ideeen
--------------------
	+ Add view management
	+ Add view transition (fade)
	+ Snake boss: schiet rechtdoor
	+ Missile weapon: add follow behaviour. target bosses first, otherwise, random target
		+ Follow duration dependent on weapon level
	+ Player: beam in richting aim
		+ Check interval firing -> susceptible to tapping abuse?
	# Speed powerup
		- Net iets sneller zodat vijanden achterblijven
	# Bonus ring
		- Bonus ring om spawn punt
			- Voor iedere kill: ++
			- Is in feite de multiplier
			- Wanneer vol, special bonus / powerup als de speler over de spawn vliegt
			- Indicator: circle om spawn, steeds groter naarmate voller
				- Gebuik lichte / donkere plekken binnen texture, vergroot
					hoek, laat samenvallen met donkere plekken
	# Resource loading: stuff alles in 1 file (behalve binary files). Laat res mgr eerst data file proberen, daarna regular FS
	+ Level border:
		+ Spawn extra entities vlak nadat de speler de grens overgaat
			+ Speciale border patrol enemies?
		+ Sluit de grens voor X aantal seconden
			- Of open de grens wanneer alle border patrol enemies gedood zijn..
		- Lock down border tijdens boss fights
	+ Achtergrond:
		# Flash rood/orange tijdens boss introductie
		+ Extra donker tijdens boss fights
		+ Effecten hebben extra impact op achtergrond
	# Death sequence.. ipv beams, een circle/beam effect zoals nu,
		met textures met teksten die door de sweep zichtbaar worden
	# Aparte ship sprite idle en firing
	+ Verschillende controls waves & boss fights (?)
		of maak het een optie, dus apart voor type gevecht
	# Laat zien welke powerup een mini boss spawnt (?)
	+ Spawn mini boss gelijktijdig met het klein grut
	+ Herintroduceer panning, maar scroll automatisch terug naar speler
	+ Teken border edge
	+ Hue shift naar rood bij kills (?)
	# Nacht modus.. Alles zwart, vector graphics wit, shadow wordt lichtbron
	# Zoomed out -> mute sound by x%
	+ Zoomed out -> touch to zoom in at focus point
	# Zoomed out -> show overlay with stats (white text on dark BG, left/right aligned, top/bottom / corners)
	# Dead objects -> debris list, render using dark colors
		Maintain a list of vector shapes w/ pos/rot
	+ Add drop shadows on entities
	+ Snake -> <blaat> motion on body parts
	# Game start -> black screen, fade in text, fade in game still
	+ Zoomed out -> Slow down time / dt, step outside time -> gives time to think, decide, watch and analize stats
		also gives incentive to return to zoomed in state
	# Zoomed out -> option to go to settings screen
	+ Zoomed out (half way) release -> If < EPS, zoom back to 1:1, with a physical jumpiness
		If >= EPS, zoo out to full map
	+ Zoom / World -> add zoom state
	# Black hole placement -> use aim cross thingy to place black hole
		# active black holes show unavailable space / perimeter
		# aim cross -> use vector graphic
		# indicator red / blue
	# Two finger slide -> pan camera (or 3 finger, but meh)

--------------------
Todo
--------------------

+ High scores: store GPS location. Make scores floating point. Add client version. Add date.

+ Entity: Snake: Fix no-go area shape

# Entity: Turrent: change bullet appearence -> longer, fire 3 per burst, w/ spread

+ Zoom: Add pinch zoom focus. Move camera in direction of center of both fingers
+ Zoom: Fix pinch behaviour when finger 1 or 2 released (current behavious is bugged, based on touch count)

# LogicTimer: Check frame skip w/ regular 60 FPS
	If 0/2 pattern -> set DT to 0 if < 0.1 on second itr
# GameState/SpriteGfx: use multiple SpriteGfx instances for different render passes
	Select active SpriteGfx and assign to m_SpriteGfx
	research VBO's (w/ static memory would be great)

+ XCode: Figure out how to add global defines during CXX

- Entity flags: Shadow/no shadow, immune to gravity/not, collision shape update/no update

- Legal: Add copyright / all rights reserved header to source files, to help protect our sekritz

# UIKit stuff roteren.. how?
	+ Create utility function
	# Rotate UIView, restore transform op GL view

# Game: black holes: limit mass
# Game: black holes: simplefy tweak values (less inter dependencies)
	or get rid of black holes
# Game: black holes: BH's shouldn't affect bullets (no control)
	- let black holes slow down everything in range instead?
+ Game: black holes: don't explode
+ Game: ship hit points
# Game: turrent spread control (distance of turret to sun)
	remove (?)

# OpenAL: Add sound volume control, per source
# OpenAL: Update listener postion using camera position / zoom (=z)
+ OpenAL: Add master volume control

+ Use array of SpriteVertex + offset/stride in OpenGL arrays in SpriteGfx (keeps pos/color/normal/texcoord/etc close)
# Check possibility of MIP offset (lod) -> sharpen textures in zoomed out mode
+ Add warm up phase / preload of all resources (except audio streams, etc)

+ OpenGL: Remove glGetError calls in release mode - they stall the GPU according to Apple's tech note
+ OpenGL: Limit the use of glBindFramebufferOES, glFlush, glFinish and setCurrentContext: - they stall as well
# OpenGL: use UIScreen bounds to init canvas area
+ OpenGL: 16 BPP textures: glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_SHORT_5_6_5, data);

+ Add FPS counter

+ Add pause/resume
	reduce logic updates:
		[timer invalidate]
		time = nil

		timer = [NS...] met lage framerate
	update: NOP wanneer paused

	note: paused != game paused. paused = app in background

	main loop: see Trac: while(CFRunLoopRunInMode(kCFRunLoopDefaultMode, 0, TRUE) == kCFRunLoopRunHandledSource);

+ Add srand(time(NULL)); -> initialize Mersenne Twister using time as well.

+ Add collision shapes to vector shapes
	-> Alex' task

+ Increase thread/process priority? -> [NSThread setThreadPriority:1.0]

+ Add LogicTimer class
+ Figure out how to force 565 RGB on all OpenGL resources

+ Implement scoreboard system
	+ Submit: Catagory
	# Submit: Country
	+ Submit: Device ID
		[[UIDevice currentDevice] uniqueIdentifier];
	+ Submit: Private key encryption
	+ Submit: Async HTTP request
	+ Submit: Submit request, status info
	+ Store: MySQL setup
	+ Store: PHP script
	# Query: Filter by catagory, country, device ID
	+ Query: Serialization
		NSDictionary *dictionary = [[CJSONDeserializer deserializer] deserializeAsDictionary:data error:&error];
		not built into std framewords, requires external lib
		-> research other serialization options PHP <-> ObjC
	+ View: HTML view

	URL stuff:
		just.. wow [[daString stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding] retain];

+ Add inverse animation timer (initial 0, progress from 1 to 0)
+ Fix audio catagory
+ Add event timer (set time delta, fire on time elapsed)
	-> Polled timer	
+ Add RoundUp, RoundDown, RoundNearest math functions
+ Add collision map render to USG
+ Add fast Random and hash functions
- Add gaussian function blur to allow real-value blur intensity in vecrend

+ Add rotation to sprites
+ Implement atlas compiler
+ Add atlas texcoord calculation to sprites
+ Add audio player
- Rewrite audio player: manually stream music
+ Add sound effects mixer/player (using OpenAL w/ culling algo)
- Add projectile stuff, simulate bullets
+ Add selection buffer dirty areas mgt
+ Clear selection buffer dirty areas

ATLCOMPILER
+ Add .h / .cpp index file generation
+ Add index generation, such that atlas textures can be referenced by ID

RESCOMPILER
- file existance checker
	+ or use make files / failure
- copy resources
	+ or use make to do this for us
# make file names relative (?) to .idx file
	+ use no path components at all

VECREND
+ add collision map preview to vecview

--------------------
Misc
--------------------

background porperties:
	base hue (color if no action)
	activity hue (hue determined by activity - slopes back to base hue)
	intensity (based on fluid height)
	texcoords (based on fluid curvature)

--------------------
Feedback
--------------------
Alex:
- Achtergrond verwarrend. Verwacht statische achtergrond. Ziet verband 'activiteit' en kleur niet
	- Achtergrond een stuk duidelijker sinds 'water' effect
- Schiet liever vooruit dan achteruit
- Analoge controller werkt goed (zodra je door hebt waar je moet aanraken)
- Enemy ship indicators zijn duidelijk, beter dan radar/mini map

Lorenzo:
- Pac man border: is niks joh. Maar aan de andere kant, niet het gevoel gevangen te zijn
- Control pads unclear

David:
- Bullets moeten verdwijnen voorbij screen border
- Voorkeur 2x analog

Laurens:
- Voorkeur 2x analog
- Paddo onduidelijk

Nigel:
- Vindt WF stijl controls goed te doen
- 2x analog voorkeur unknown

Marcel:
- Enemy ships moeten ongeveer maar net iets trager dan speler bewegen
- Voorkeur WF controls

Thomas:
- Controls hebben richting/snelheid indicatie nodig op de pads - vanwege complete noobs die anders denken dat 't digitale knoppen zijn :/
- Control pads unclear

Dave @ School:
- Control pads unclear

--------------------
Issues - Resolved
--------------------
+ Firing geluid stokt soms. Max aantal OpenAL sources? (32 max.. mss moeten we cappen @ 20 oid)
